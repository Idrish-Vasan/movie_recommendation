# -*- coding: utf-8 -*-
"""Movie Recommendation System.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ssn0kxIQSdAKgnthaC9mlgSzHWQvvR0f

Importing the Dependencies
"""

import pandas as pd
 import numpy as np
 import difflib
 from sklearn.feature_extraction.text import TfidfVectorizer
 from sklearn.metrics.pairwise import cosine_similarity

"""Data Collection and Pre Processing"""

#loading the data into a pandas dataframe
movies_data = pd.read_csv('movies.csv')

#first five rows
movies_data.head()

#number of rows and columns
movies_data.shape

#selecting revelant features for the model selection
selected_features = ['genres','keywords','tagline','cast','director']
print(selected_features)

#replacing null values
for feature in selected_features:
  movies_data[feature] = movies_data[feature].fillna('')

#combining all the features
combined_features = movies_data['genres']+' '+movies_data['keywords']+' '+movies_data['tagline']+' '+movies_data['cast']+' '+movies_data['director']
print(combined_features)

#converting the text data into feature vectors
vectorizer = TfidfVectorizer()
feature_vectors = vectorizer.fit_transform(combined_features)
print(feature_vectors)

"""Cosine Similarity"""

#getting the similarity scores
similarity = cosine_similarity(feature_vectors)
print(similarity)

print(similarity.shape)

#getting the movie name from the user
movie_name = input('Enter your favourite movie name: ')

#creating all the list with all the movie names in the given dataset
list_of_all_titles = movies_data['title'].tolist()
print(list_of_all_titles)

#finding the close match for the movie given by user
find_close_match = difflib.get_close_matches(movie_name,list_of_all_titles)
print(find_close_match)

close_match=find_close_match[0]
print(close_match)

#finding index of the movie with the title
index_of_the_movie = movies_data[movies_data.title == close_match]['index'].values[0]
print(index_of_the_movie)

#getting list of similar movies
similarity_score = list(enumerate(similarity[index_of_the_movie]))
print(similarity_score)

len(similarity_score)

#sorting the movies based on the similarity score
sorted_similar_movies = sorted(similarity_score,key=lambda x:x[1],reverse=True)
print(sorted_similar_movies)

#print the name of the similar movie based on the index
print('Movies suggested for you: \n')
i=1
for movie in sorted_similar_movies:
  index = movie[0]
  title_from_index = movies_data[movies_data.index==index]['title'].values[0]
  if(i<30):
    print(i,'.',title_from_index)
    i+=1

"""Movie Recommendation System"""

movie_name = input('Enter your favourite movie name: ')

list_of_all_titles = movies_data['title'].tolist()

find_close_match = difflib.get_close_matches(movie_name,list_of_all_titles)

close_match=find_close_match[0]

index_of_the_movie = movies_data[movies_data.title == close_match]['index'].values[0]

similarity_score = list(enumerate(similarity[index_of_the_movie]))

sorted_similar_movies = sorted(similarity_score,key=lambda x:x[1],reverse=True)

print('Movies suggested for you: \n')

i=1
for movie in sorted_similar_movies:
  index = movie[0]
  title_from_index = movies_data[movies_data.index==index]['title'].values[0]
  if(i<30):
    print(i,'.',title_from_index)
    i+=1

